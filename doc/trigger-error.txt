trigger_error

(PHP 4 >= 4.0.1, PHP 5)

trigger_error â€” Generates a user-level error/warning/notice message

==============================================================================
*Description*

    bool trigger_error ( string $error_msg [, int $error_type = E_USER_NOTICE~
    ] )~

Used to trigger a user error condition, it can be used in conjunction with the
built-in error handler, or with a user defined function that has been set as
the new error handler (|set_error_handler|).

This function is useful when you need to generate a particular response to an
exception at runtime.

==============================================================================
*Parameters*

{error_msg}

    The designated error message for this error. It's limited to 1024 bytes in
    length. Any additional characters beyond 1024 bytes will be truncated.

{error_type}

    The designated error type for this error. It only works with the E_USER
    family of constants, and will default to E_USER_NOTICE.

==============================================================================
*Return* *Values*

This function returns FALSE if wrong {error_type} is specified, TRUE
otherwise.

==============================================================================
*Examples*

Example #1 trigger_error() example

See |set_error_handler| for a more extensive example.

<?php >
    if ($divisor == 0) {
        trigger_error("Cannot divide by zero", E_USER_ERROR);
    }
<?>

==============================================================================
*Notes*

Warning

HTML entities in {error_msg} are not escaped. Use |htmlentities| on the
message if the error is to be displayed in a browser.

==============================================================================
*See* *Also*

  * |error_reporting| - Sets which PHP errors are reported
  * |set_error_handler| - Sets a user-defined error handler function
  * |restore_error_handler| - Restores the previous error handler function
  * The error level constants


vim:ft=help:
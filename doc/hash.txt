hash

(PHP 5 >= 5.1.2, PECL hash >= 1.1)

hash â€” Generate a hash value (message digest)

==============================================================================
*Description*

    string hash ( string $algo , string $data [, bool $raw_output = false ] )~

==============================================================================
*Parameters*

{algo}

    Name of selected hashing algorithm (i.e. "md5", "sha256", "haval160,4",
    etc..)

{data}

    Message to be hashed.

{raw_output}

    When set to TRUE, outputs raw binary data. FALSE outputs lowercase hexits.

==============================================================================
*Return* *Values*

Returns a string containing the calculated message digest as lowercase hexits
unless {raw_output} is set to true in which case the raw binary representation
of the message digest is returned.

==============================================================================
*Changelog*

Version                      Description
5.4.0   The tiger algorithm now uses big-endian byte ordering.

==============================================================================
*Examples*

Example #1 A hash() example

<?php >
    echo hash('ripemd160', 'The quick brown fox jumped over the lazy dog.');
<?>

The above example will output:

ec457d0a974c48d5685a7efa03d137dc8bbde7e3

==============================================================================
*See* *Also*

  * |hash_file| - Generate a hash value using the contents of a given file
  * |hash_hmac| - Generate a keyed hash value using the HMAC method
  * |hash_init| - Initialize an incremental hashing context
  * |md5| - Calculate the md5 hash of a string
  * |sha1| - Calculate the sha1 hash of a string


vim:ft=help:
oci_new_cursor

(PHP 5, PECL OCI8 >= 1.1.0)

oci_new_cursor â€” Allocates and returns a new cursor (statement handle)

==============================================================================
*Description*

    resource oci_new_cursor ( resource $connection )~

Allocates a new statement handle on the specified connection.

==============================================================================
*Parameters*

{connection}

    An Oracle connection identifier, returned by |oci_connect| or 
    |oci_pconnect|.

==============================================================================
*Return* *Values*

Returns a new statement handle, or FALSE on error.

==============================================================================
*Examples*

Example #1 Binding a REF CURSOR in an Oracle stored procedure call

<?php >

    // Precreate:
    //   create or replace procedure myproc(myrc out sys_refcursor) as
    //   begin
    //     open myrc for select first_name from employees;
    //   end;

    $conn = oci_connect("hr", "hrpwd", "localhost/XE");
    if (!$conn) {
        $m = oci_error();
        trigger_error(htmlentities($m['message']), E_USER_ERROR);
    }

    $curs = oci_new_cursor($conn);
    $stid = oci_parse($conn, "begin myproc(:cursbv); end;");
    oci_bind_by_name($stid, ":cursbv", $curs, -1, OCI_B_CURSOR);
    oci_execute($stid);

    oci_execute($curs);  // Execute the REF CURSOR like a normal statement id
    while (($row = oci_fetch_array($curs, OCI_ASSOC+OCI_RETURN_NULLS)) != false) {
        echo $row['FIRST_NAME'] . "<br />\n";
    }

    oci_free_statement($stid);
    oci_free_statement($curs);
    oci_close($conn);

<?>

==============================================================================
*Notes*

    Note:

    In PHP versions before 5.0.0 you must use |ocinewcursor| instead. This
    name still can be used, it was left as alias of oci_new_cursor() for
    downwards compatability. This, however, is deprecated and not recommended.


vim:ft=help:
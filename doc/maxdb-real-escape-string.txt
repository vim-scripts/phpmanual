maxdb_real_escape_string

maxdb::real_escape_string

(PECL maxdb >= 1.0)

maxdb_real_escape_string -- maxdb::real_escape_string â€” Escapes special
characters in a string for use in an SQL statement, taking into account the
current charset of the connection

==============================================================================
*Description*

Procedural style

    string maxdb_real_escape_string ( resource $link , string $escapestr )~

Object oriented style

    string maxdb::real_escape_string ( string $escapestr )~

This function is used to create a legal SQL string that you can use in an SQL
statement. The string escapestr is encoded to an escaped SQL string, taking
into account the current character set of the connection.

Characters encoded are ', ".

==============================================================================
*Return* *Values*

Returns an escaped string.

==============================================================================
*Examples*

Example #1 Object oriented style

<?php >
    $maxdb = new maxdb("localhost", "MONA", "RED", "DEMODB");

    /* check connection */
    if (maxdb_connect_errno()) {
       printf("Connect failed: %s\n", maxdb_connect_error());
       exit();
    }

    $maxdb->query("CREATE TABLE temp.mycity LIKE hotel.city");

    $city = "'s Hertogenbosch";

    /* this query will fail, cause we didn't escape $city */
    if (!$maxdb->query("INSERT into temp.mycity VALUES ('11111','$city','NY')")) {
       printf("Error: %s\n", $maxdb->sqlstate);
    }

    $city = $maxdb->real_escape_string($city);

    /* this query with escaped $city will work */
    if ($maxdb->query("INSERT into temp.mycity VALUES ('22222','$city','NY')")) {
       printf("%d Row inserted.\n", $maxdb->affected_rows);
    }

    $maxdb->close();
<?>

Example #2 Procedural style

<?php >
    $link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

    /* check connection */
    if (maxdb_connect_errno()) {
       printf("Connect failed: %s\n", maxdb_connect_error());
       exit();
    }

    maxdb_query($link, "CREATE TABLE temp.mycity LIKE hotel.city");

    $city = "'s Hertogenbosch";

    /* this query will fail, cause we didn't escape $city */
    if (!maxdb_query($link, "INSERT into temp.mycity VALUES ('11111','$city','NY')
    ")) {
       printf("Error: %s\n", maxdb_sqlstate($link));
    }

    $city = maxdb_real_escape_string($link, $city);

    /* this query with escaped $city will work */
    if (maxdb_query($link, "INSERT into temp.mycity VALUES ('22222','$city','NY')"
    )) {
       printf("%d Row inserted.\n", maxdb_affected_rows($link));
    }

    maxdb_close($link);
<?>

The above example will output something similar to:

Warning: maxdb_query(): -5016 POS(43) Missing delimiter: ) <...>
Error: 42000
1 Row inserted.

==============================================================================
*See* *Also*

  * |maxdb_character_set_name| - Returns the default character set for the
    database connection


vim:ft=help:
array_diff_ukey

(PHP 5 >= 5.1.0)

array_diff_ukey â€” Computes the difference of arrays using a callback function
on the keys for comparison

==============================================================================
*Description*

    array array_diff_ukey ( array $array1 , array $array2 [, array $... ],~
    callable $key_compare_func )~

Compares the keys from {array1} against the keys from {array2} and returns the
difference. This function is like |array_diff| except the comparison is done
on the keys instead of the values.

Unlike |array_diff_key| a user supplied callback function is used for the
indices comparison, not internal function.

==============================================================================
*Parameters*

{array1}

    The array to compare from

{array2}

    An array to compare against

{...}

    More arrays to compare against

{key_compare_func}

    The comparison function must return an integer less than, equal to, or
    greater than zero if the first argument is considered to be respectively
    less than, equal to, or greater than the second.


    int callback ( mixed $a, mixed $b )~

==============================================================================
*Return* *Values*

Returns an array containing all the entries from {array1} that are not present
in any of the other arrays.

==============================================================================
*Examples*

Example #1 array_diff_ukey() example

<?php >
    function key_compare_func($key1, $key2)
    {
        if ($key1 == $key2)
            return 0;
        else if ($key1 > $key2)
            return 1;
        else
            return -1;
    }

    $array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
    $array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);

    var_dump(array_diff_ukey($array1, $array2, 'key_compare_func'));
<?>

The above example will output:

array(2) {
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}

==============================================================================
*Notes*

    Note:

    This function only checks one dimension of a n-dimensional array. Of
    course you can check deeper dimensions by using array_diff_ukey($array1
    [0], $array2[0], 'callback_func');.

==============================================================================
*See* *Also*

  * |array_diff| - Computes the difference of arrays
  * |array_udiff| - Computes the difference of arrays by using a callback
    function for data comparison
  * |array_diff_assoc| - Computes the difference of arrays with additional
    index check
  * |array_diff_uassoc| - Computes the difference of arrays with additional
    index check which is performed by a user supplied callback function
  * |array_udiff_assoc| - Computes the difference of arrays with additional
    index check, compares data by a callback function
  * |array_udiff_uassoc| - Computes the difference of arrays with additional
    index check, compares data and indexes by a callback function
  * |array_diff_key| - Computes the difference of arrays using keys for
    comparison
  * |array_intersect| - Computes the intersection of arrays
  * |array_intersect_assoc| - Computes the intersection of arrays with
    additional index check
  * |array_intersect_uassoc| - Computes the intersection of arrays with
    additional index check, compares indexes by a callback function
  * |array_intersect_key| - Computes the intersection of arrays using keys for
    comparison
  * |array_intersect_ukey| - Computes the intersection of arrays using a
    callback function on the keys for comparison


vim:ft=help:
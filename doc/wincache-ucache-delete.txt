wincache_ucache_delete

(PECL wincache >= 1.1.0)

wincache_ucache_delete â€” Deletes variables from the user cache

==============================================================================
*Description*

    bool wincache_ucache_delete ( mixed $key )~

Deletes the elements in the user cache pointed by {key}.

==============================================================================
*Parameters*

{key}

    The {key} that was used to store the variable in the cache. {key} is case
    sensitive. {key} can be an array of keys.

==============================================================================
*Return* *Values*

Returns TRUE on success or FALSE on failure.

If {key} is an array then the function returns FALSE if every element of the
array fails to get deleted from the user cache, otherwise returns an array
which consists of all the keys that are deleted.

==============================================================================
*Examples*

Example #1 Using wincache_ucache_delete() with {key} as a string

<?php >
    wincache_ucache_set('foo', 'bar');
    var_dump(wincache_ucache_delete('foo'));
    var_dump(wincache_ucache_exists('foo'));
<?>

The above example will output:

bool(true)
bool(false)

Example #2 Usingwincache_ucache_delete() with {key} as an array

<?php >
    $array1 = array('green' => '5', 'blue' => '6', 'yellow' => '7', 'cyan' => '8'
    );
    wincache_ucache_set($array1);
    $array2 = array('green', 'blue', 'yellow', 'cyan');
    var_dump(wincache_ucache_delete($array2));
<?>

The above example will output:

array(4) { [0]=> string(5) "green"
           [1]=> string(4) "Blue"
           [2]=> string(6) "yellow"
           [3]=> string(4) "cyan" }

Example #3 Using wincache_ucache_delete() with {key} as an array where some
elements cannot be deleted

<?php >
    $array1 = array('green' => '5', 'blue' => '6', 'yellow' => '7', 'cyan' => '8'
    );
    wincache_ucache_set($array1);
    $array2 = array('orange', 'red', 'yellow', 'cyan');
    var_dump(wincache_ucache_delete($array2));
<?>

The above example will output:

array(2) { [0]=> string(6) "yellow"
           [1]=> string(4) "cyan" }

==============================================================================
*See* *Also*

  * |wincache_ucache_set| - Adds a variable in user cache and overwrites a
    variable if it already exists in the cache
  * |wincache_ucache_add| - Adds a variable in user cache only if variable
    does not already exist in the cache
  * |wincache_ucache_get| - Gets a variable stored in the user cache
  * |wincache_ucache_clear| - Deletes entire content of the user cache
  * |wincache_ucache_exists| - Checks if a variable exists in the user cache
  * |wincache_ucache_meminfo| - Retrieves information about user cache memory
    usage
  * |wincache_ucache_info| - Retrieves information about data stored in the
    user cache


vim:ft=help:
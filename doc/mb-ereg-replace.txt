mb_ereg_replace

(PHP 4 >= 4.2.0, PHP 5)

mb_ereg_replace â€” Replace regular expression with multibyte support

==============================================================================
*Description*

    string mb_ereg_replace ( string $pattern , string $replacement , string~
    $string [, string $option = "msr" ] )~

Scans {string} for matches to {pattern}, then replaces the matched text with
{replacement}

==============================================================================
*Parameters*

{pattern}

    The regular expression pattern.

    Multibyte characters may be used in {pattern}.

{replacement}

    The replacement text.

{string}

    The string being checked.

{option}
    Matching condition can be set by {option} parameter. If i is specified for
    this parameter, the case will be ignored. If x is specified, white space
    will be ignored. If m is specified, match will be executed in multiline
    mode and line break will be included in '.'. If p is specified, match will
    be executed in POSIX mode, line break will be considered as normal
    character. If e is specified, {replacement} string will be evaluated as
    PHP expression.

==============================================================================
*Return* *Values*

The resultant string on success, or FALSE on error.

==============================================================================
*Notes*

    Note:

    The internal encoding or the character encoding specified by 
    |mb_regex_encoding| will be used as the character encoding for this
    function.

Warning

Never use the e modifier when working on untrusted input. No automatic
escaping will happen (as known from |preg_replace|). Not taking care of this
will most likely create remote code execution vulnerabilities in your
application.

==============================================================================
*See* *Also*

  * |mb_regex_encoding| - Set/Get character encoding for multibyte regex
  * |mb_eregi_replace| - Replace regular expression with multibyte support
    ignoring case


vim:ft=help:
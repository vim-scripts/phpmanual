array_reduce

(PHP 4 >= 4.0.5, PHP 5)

array_reduce â€” Iteratively reduce the array to a single value using a callback
function

==============================================================================
*Description*

    mixed array_reduce ( array $array , callable $callback [, mixed $initial~
    = NULL ] )~

array_reduce() applies iteratively the {callback} function to the elements of
the {array}, so as to reduce the array to a single value.

==============================================================================
*Parameters*

{array}

    The input array.

{callback}

    mixed callback ( mixed $carry , mixed $item )~

    {carry}

        Holds the return value of the previous iteration; in the case of the
        first iteration it instead holds the value of {initial}.

    {item}

        Holds the value of the current iteration.

{initial}

    If the optional {initial} is available, it will be used at the beginning
    of the process, or as a final result in case the array is empty.

==============================================================================
*Return* *Values*

Returns the resulting value.

If the array is empty and {initial} is not passed, array_reduce() returns NULL
.

==============================================================================
*Changelog*

Version                      Description
5.3.0   Changed {initial} to allow mixed, previously integer.

==============================================================================
*Examples*

Example #1 array_reduce() example

<?php >
    function sum($carry, $item)
    {
        $carry += $item;
        return $carry;
    }

    function multiplication($carry, $item)
    {
        $carry *= $item;
        return $carry;
    }

    $a = array(1, 2, 3, 4, 5);
    $x = array();

    var_dump(array_reduce($a, "sum")); // int(15)
    var_dump(array_reduce($a, "multiplication", 10)); // int
    (1200), because: 10*1*2*3*4*5
    var_dump(array_reduce($x, "sum", "No data to reduce")); // string(17)
     "No data to reduce"
<?>

==============================================================================
*See* *Also*

  * |array_filter| - Filters elements of an array using a callback function
  * |array_map| - Applies the callback to the elements of the given arrays
  * |array_unique| - Removes duplicate values from an array
  * |array_count_values| - Counts all the values of an array


vim:ft=help:
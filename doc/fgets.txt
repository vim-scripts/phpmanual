fgets

(PHP 4, PHP 5)

fgets â€” Gets line from file pointer

==============================================================================
*Description*

    string fgets ( resource $handle [, int $length ] )~

Gets a line from file pointer.

==============================================================================
*Parameters*

{handle}

    The file pointer must be valid, and must point to a file successfully
    opened by |fopen| or |fsockopen| (and not yet closed by |fclose|).

{length}

    Reading ends when {length} - 1 bytes have been read, or a newline (which
    is included in the return value), or an EOF (whichever comes first). If no
    length is specified, it will keep reading from the stream until it reaches
    the end of the line.

        Note:

        Until PHP 4.3.0, omitting it would assume 1024 as the line length. If
        the majority of the lines in the file are all larger than 8KB, it is
        more resource efficient for your script to specify the maximum line
        length.

==============================================================================
*Return* *Values*

Returns a string of up to {length} - 1 bytes read from the file pointed to by
{handle}. If there is no more data to read in the file pointer, then FALSE is
returned.

If an error occurs, FALSE is returned.

==============================================================================
*Changelog*

Version        Description
4.3.0   fgets() is now binary safe

==============================================================================
*Examples*

Example #1 Reading a file line by line

<?php >
    $handle = @fopen("/tmp/inputfile.txt", "r");
    if ($handle) {
        while (($buffer = fgets($handle, 4096)) !== false) {
            echo $buffer;
        }
        if (!feof($handle)) {
            echo "Error: unexpected fgets() fail\n";
        }
        fclose($handle);
    }
<?>

==============================================================================
*Notes*

    Note: If PHP is not properly recognizing the line endings when reading
    files either on or created by a Macintosh computer, enabling the
    auto_detect_line_endings run-time configuration option may help resolve
    the problem.

    Note:

    People used to the 'C' semantics of fgets() should note the difference in
    how EOF is returned.

==============================================================================
*See* *Also*

  * |fgetss| - Gets line from file pointer and strip HTML tags
  * |fread| - Binary-safe file read
  * |fgetc| - Gets character from file pointer
  * |stream_get_line| - Gets line from stream resource up to a given delimiter
  * |fopen| - Opens file or URL
  * |popen| - Opens process file pointer
  * |fsockopen| - Open Internet or Unix domain socket connection
  * |stream_set_timeout| - Set timeout period on a stream


vim:ft=help:
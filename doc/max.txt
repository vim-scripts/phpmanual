max

(PHP 4, PHP 5)

max â€” Find highest value

==============================================================================
*Description*

    mixed max ( array $values )~
    mixed max ( mixed $value1 , mixed $value2 [, mixed $... ] )~

If the first and only parameter is an array, max() returns the highest value
in that array. If at least two parameters are provided, max() returns the
biggest of these values.

    Note:

    Values of different types will be compared using the standard comparison
    rules. For instance, a non-numeric string will be compared to an integer
    as though it were 0, but multiple string values will be compared
    alphanumerically. The actual value returned will be of the original type
    with no conversion applied.

==============================================================================
*Parameters*

{values}

    An array containing the values.

{value1}

    Any comparable value.

{value2}

    Any comparable value.

{...}

    Any comparable value.

==============================================================================
*Return* *Values*

max() returns the parameter value considered "highest" according to standard
comparisons. If multiple values of different types evaluate as equal (e.g. 0
and 'abc') the first provided to the function will be returned.

==============================================================================
*Examples*

Example #1 Example uses of max()

<?php >
    echo max(2, 3, 1, 6, 7);  // 7
    echo max(array(2, 4, 5)); // 5

    // The string 'hello' when compared to an int is treated as 0
    //
     Since the two values are equal, the order they are provided determines the result
    echo max(0, 'hello');     // 0
    echo max('hello', 0);     // hello

    // Here we are comparing -1 < 0, so 'hello' is the highest value
    echo max('hello', -1);    // hello

    // With multiple arrays of different lengths, max returns the longest
    $val = max(array(2, 2, 2), array(1, 1, 1, 1)); // array(1, 1, 1, 1)

    // Multiple arrays of the same length are compared from left to right
    // so in our example: 2 == 2, but 5 > 4
    $val = max(array(2, 4, 8), array(2, 5, 1)); // array(2, 5, 1)

    // If both an array and non-array are given, the array will be returned
    // as comparisons treat arrays as greater than any other value
    $val = max('string', array(2, 5, 7), 42);   // array(2, 5, 7)

    // If one argument is NULL or a boolean, it will be compared against
    // other values using the rule FALSE 
    < TRUE regardless of the other types involved
    // In the below examples, -10 is treated as TRUE in the comparison
    $val = max(-10, FALSE); // -10
    $val = max(-10, FALSE); // -10

    // 0, on the other hand, is treated as FALSE, so is "lower than" TRUE
    $val = max(0, TRUE); // TRUE
<?>

==============================================================================
*See* *Also*

  * |min| - Find lowest value
  * |count| - Count all elements in an array, or something in an object


vim:ft=help:
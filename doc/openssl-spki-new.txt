openssl_spki_new

(PHP 5 >= 5.6.0)

openssl_spki_new â€” Generate a new signed public key and challenge

==============================================================================
*Description*

    string openssl_spki_new ( resource &$privkey , string &$challenge [, int~
    $algorithm = 0 ] )~

Generates a signed public key and challenge using specified hashing algorithm

==============================================================================
*Parameters*

{privkey}

    {privkey} should be set to a private key that was previously generated by 
    |openssl_pkey_new| (or otherwise obtained from the other openssl_pkey
    family of functions). The corresponding public portion of the key will be
    used to sign the CSR.

{challenge}

    The challenge associated to associate with the SPKAC

{algorithm}

    The digest algorithm. See openssl_get_md_method().

==============================================================================
*Return* *Values*

Returns a signed public key and challenge string or NULL on failure.

==============================================================================
*Errors/Exceptions*

Emits an E_WARNING level error if an unknown signature algorithm is passed via
the {algorithm} parameter.

==============================================================================
*Examples*

Example #1 openssl_spki_new() example

Generate a new SPKAC with the default digest (MD5)

<?php >
    $pkey = openssl_pkey_new('secret password');
    $spkac = openssl_spki_new($pkey, 'testing');

    if ($spkac !== NULL) {
        echo $spkac;
    } else {
        echo "SPKAC generation failed";
    }
<?>

The above example will output something similar to:

MIICRzCCAS8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDM3V3sS4o4
mB9dczziRnjGAmSp+JwPrHoYMAFGvDNmZGyiWfU586X4BKs++BAj7e/FsAfno0Hd
hN9FwpCNFSox30L03nQvLYJE7f/WqigwBeMRT7Op/xvFks4sT70xP2HRYv4KqP9a
WRcKU6cFH8VxhFhqM2txEIxZKdFLaL28yT7bEDmcglf4JLDdgNMb9rET1dkgtKE6
dOaJHPGjf1uvnOH4YwkQr7n4sLUR3Kdbh0ZJAFuQVDZulo+LLzxBBkqJJcB6FhF+
oXCdHTKZnqAhpWDz+NXYytAmevab6IYm5TWPWsJUv1YKJA5lg2mXbbloIZlN9Mgc
i9fi03bdw+crAgMBAAEWB3Rlc3RpbmcwDQYJKoZIhvcNAQEEBQADggEBALyUvP/o
pPSoWBlorFyZ2RnGwKf9qMpE0q2IJP7G3oDR4LyK/m933DUiZ+YnqThrH/CWb4Ek
y5I3OCyl3S4wCuU1ibZZwDVwYShr5ELp0J9PEf7qMQZOhNsizoC7k+Czb2xB6hYW
sKfsfTKm3cXBtH3fdgc/Z1Z7VSWnAzYo38snqm72NTf5yFRnrQdphNNXi+kn1zHA
lxXRyFDXHOcYsOnwAWfyXFA4QDHQ0ezz0UoCY8gJXovcZb4GRYqOLUAsF2HcNboy
29WN8VqE29sL9QxVZFlwMcqyoLcNnyw38GvNvAGqSvzzbnEFP2MAQXJVe0H0hdp/
MML5G2iNVgNozAo=

==============================================================================
*See* *Also*

  * openssl_spki_new()
  * |openssl_spki_export_challenge| - Exports the challenge assoicated with a
    signed public key and challenge
  * |openssl_spki_export| - Exports a valid PEM formatted public key signed
    public key and challenge
  * |openssl_csr_new| - Generates a CSR
  * |openssl_csr_sign| - Sign a CSR with another certificate (or itself) and
    generate a certificate


vim:ft=help:
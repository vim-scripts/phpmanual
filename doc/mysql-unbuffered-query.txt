mysql_unbuffered_query

(PHP 4 >= 4.0.6, PHP 5)

mysql_unbuffered_query â€” Send an SQL query to MySQL without fetching and
buffering the result rows.

Warning

This extension is deprecated as of PHP 5.5.0, and will be removed in the
future. Instead, the MySQLi or PDO_MySQL extension should be used. See also
MySQL: choosing an API guide and related FAQ for more information.
Alternatives to this function include:

  * See: Buffered and Unbuffered queries

==============================================================================
*Description*

    resource mysql_unbuffered_query ( string $query [, resource~
    $link_identifier = NULL ] )~

mysql_unbuffered_query() sends the SQL query {query} to MySQL without
automatically fetching and buffering the result rows as |mysql_query| does.
This saves a considerable amount of memory with SQL queries that produce large
result sets, and you can start working on the result set immediately after the
first row has been retrieved as you don't have to wait until the complete SQL
query has been performed. To use mysql_unbuffered_query() while multiple
database connections are open, you must specify the optional parameter
{link_identifier} to identify which connection you want to use.

==============================================================================
*Parameters*

{query}

    The SQL query to execute.

    Data inside the query should be |properly escaped|.

{ link_identifier}

    The MySQL connection. If the link identifier is not specified, the last
    link opened by |mysql_connect| is assumed. If no such link is found, it
    will try to create one as if |mysql_connect| was called with no arguments.
    If no connection is found or established, an E_WARNING level error is
    generated.

==============================================================================
*Return* *Values*

For SELECT, SHOW, DESCRIBE or EXPLAIN statements, mysql_unbuffered_query()
returns a resource on success, or FALSE on error.

For other type of SQL statements, UPDATE, DELETE, DROP, etc, 
mysql_unbuffered_query() returns TRUE on success or FALSE on error.

==============================================================================
*Notes*

    Note:

    The benefits of mysql_unbuffered_query() come at a cost: you cannot use 
    |mysql_num_rows| and |mysql_data_seek| on a result set returned from 
    mysql_unbuffered_query(), until all rows are fetched. You also have to
    fetch all result rows from an unbuffered SQL query before you can send a
    new SQL query to MySQL, using the same {link_identifier}.

==============================================================================
*See* *Also*

  * |mysql_query| - Send a MySQL query


vim:ft=help:
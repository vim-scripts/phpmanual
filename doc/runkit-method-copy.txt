runkit_method_copy

(PECL runkit >= 0.7.0)

runkit_method_copy â€” Copies a method from class to another

==============================================================================
*Description*

    bool runkit_method_copy ( string $dClass , string $dMethod , string~
    $sClass [, string $sMethod ] )~
Warning

This function is EXPERIMENTAL. The behaviour of this function, its name, and
surrounding documentation may change without notice in a future release of
PHP. This function should be used at your own risk.

==============================================================================
*Parameters*

{dClass}

    Destination class for copied method

{dMethod}

    Destination method name

{sClass}

    Source class of the method to copy

{sMethod}

    Name of the method to copy from the source class. If this parameter is
    omitted, the value of {dMethod} is assumed.

==============================================================================
*Return* *Values*

Returns TRUE on success or FALSE on failure.

==============================================================================
*Examples*

Example #1 runkit_method_copy() example

<?php >
    class Foo {
        function example() {
            return "foo!\n";
        }
    }

    class Bar {
        // initially, no methods
    }

    // copy the example() method from the Foo class to the Bar class, as baz()
    runkit_method_copy('Bar', 'baz', 'Foo', 'example');

    // output copied function
    echo Bar::baz();
<?>

The above example will output:

foo!

==============================================================================
*See* *Also*

  * |runkit_method_add| - Dynamically adds a new method to a given class
  * |runkit_method_redefine| - Dynamically changes the code of the given
    method
  * |runkit_method_remove| - Dynamically removes the given method
  * |runkit_method_rename| - Dynamically changes the name of the given method
  * |runkit_function_copy| - Copy a function to a new function name


vim:ft=help:
ssh2_publickey_add

(PECL ssh2 >= 0.10)

ssh2_publickey_add â€” Add an authorized publickey

==============================================================================
*Description*

    bool ssh2_publickey_add ( resource $pkey , string $algoname , string~
    $blob [, bool $overwrite = false [, array $attributes ]] )~


    Note: The public key subsystem is used for managing public keys on a
    server to which the client is already authenticated. To authenticate to a
    remote system using public key authentication, use the 
    |ssh2_auth_pubkey_file| function instead.

==============================================================================
*Parameters*

{pkey}

    Publickey Subsystem resource created by |ssh2_publickey_init|.

{algoname}

    Publickey algorithm (e.g.): ssh-dss, ssh-rsa

{blob}

    Publickey blob as raw binary data

{overwrite}

    If the specified key already exists, should it be overwritten?

{attributes}

    Associative array of attributes to assign to this public key. Refer to
    ietf-secsh-publickey-subsystem for a list of supported attributes. To mark
    an attribute as mandatory, precede its name with an asterisk. If the
    server is unable to support an attribute marked mandatory, it will abort
    the add process.

==============================================================================
*Return* *Values*

Returns TRUE on success or FALSE on failure.

==============================================================================
*Examples*

Example #1 Adding a publickey with ssh2_publickey_add()

<?php >
    $ssh2 = ssh2_connect('shell.example.com', 22);
    ssh2_auth_password($ssh2, 'jdoe', 'password');
    $pkey = ssh2_publickey_init($ssh2);

    $keyblob = base64_decode('
    AAAAB3NzaC1yc2EAAAABIwAAAIEA5HVt6VqSGd5PTrLRdjNONxXH1tVFGn0
    Bd26BF0aCP9qyJRlvdJ3j4WBeX4ZmrveGrjMgkseSYc4xZ26sDHwfL351xj
    zaLpipu\BGRrw17mWVBhuCExo476ri5tQFzbTc54VEHYckxQ16CjSTibI5X
    69GmnYC9PNqEYq/1TP+HF10=');

    ssh2_publickey_add($pkey, 'ssh-rsa', $keyblob, false, array('comment'=>
    "John's Key"));
<?>

==============================================================================
*See* *Also*

  * |ssh2_publickey_init| - Initialize Publickey subsystem
  * |ssh2_publickey_remove| - Remove an authorized publickey
  * |ssh2_publickey_list| - List currently authorized publickeys


vim:ft=help:
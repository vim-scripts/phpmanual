mysqlnd_ms_xa_gc

(PECL mysqlnd_ms < 1.6.0)

mysqlnd_ms_xa_gc â€” Garbage collects unfinished XA transactions after severe
errors

==============================================================================
*Description*

    int mysqlnd_ms_xa_gc ( mixed $connection [, string $gtrid [, boolean~
    $ignore_max_retries ]] )~

Garbage collects unfinished XA transactions.

The XA protocol is a blocking protocol. There exist cases when servers
participating in a global transaction cannot make progress when the
transaction coordinator crashes or disconnects. In such a case, the MySQL
servers keep waiting for instructions to finish the XA transaction in
question. Because transactions occupy resources, transactions should always be
terminated properly.

Garbage collection requires configuring a state store to track global
transactions. Should a PHP client crash in the middle of a transaction and a
new PHP client be started, then the built-in garbage collection can learn
about the aborted global transaction and terminate it. If you do not configure
a state store, the garbage collection cannot perform any cleanup tasks.

The state store should be crash-safe and be highly available to survive its
own crash. Currently, only MySQL is supported as a state store.

Garbage collection can also be performed automatically in the background. See
the plugin configuration directive garbage_collection for details.

    Note: Experimental

    The feature is currently under development. There may be issues and/or
    feature limitations. Do not use in production environments.

==============================================================================
*Parameters*

{connection}

    A MySQL connection handle obtained from any of the connect functions of
    the mysqli, mysql or PDO_MYSQL extensions.

{gtrid}

    Global transaction identifier (gtrid). If given, the garbage collection
    considers the transaction only. Otherwise, the state store is scanned for
    any unfinished transaction.

{ignore_max_retries}

    Whether to ignore the plugin configuration max_retries setting. If garbage
    collection continously fails and the max_retries limit is reached prior to
    finishing the failed global transaction, you can attempt further runs
    prior to investigating the cause and solving the issue manually by
    issueing appropriate SQL statements on the participants. Setting the
    parameter has the same effect as temporarily setting max_retries = 0.

==============================================================================
*Return* *Values*

Returns TRUE if garbage collection was successful. Otherwise, returns FALSE

==============================================================================
*See* *Also*

  * Quickstart XA/Distributed transactions
  * Runtime configuration
  * State store configuration
  * |mysqlnd_ms_get_stats| - Returns query distribution and connection
    statistics


vim:ft=help:
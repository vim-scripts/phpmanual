oci_num_rows

(PHP 5, PECL OCI8 >= 1.1.0)

oci_num_rows â€” Returns number of rows affected during statement execution

==============================================================================
*Description*

    int oci_num_rows ( resource $statement )~

Gets the number of rows affected during statement execution.

==============================================================================
*Parameters*

{statement}

    A valid OCI statement identifier.

==============================================================================
*Return* *Values*

Returns the number of rows affected as an integer, or FALSE on errors.

==============================================================================
*Examples*

Example #1 oci_num_rows() example

<?php >

    $conn = oci_connect("hr", "hrpwd", "localhost/XE");
    if (!$conn) {
        $m = oci_error();
        trigger_error(htmlentities($m['message']), E_USER_ERROR);
    }

    $stid = oci_parse($conn, "create table emp2 as select * from employees");
    oci_execute($stid);
    echo oci_num_rows($stid) . " rows inserted.<br />\n";
    oci_free_statement($stid);

    $stid = oci_parse($conn, "delete from emp2");
    oci_execute($stid, OCI_DEFAULT);
    echo oci_num_rows($stid) . " rows deleted.<br />\n";
    oci_commit($conn);
    oci_free_statement($stid);

    $stid = oci_parse($conn, "drop table emp2");
    oci_execute($stid);
    oci_free_statement($stid);

    oci_close($conn);

<?>

==============================================================================
*Notes*

    Note:

    This function does not return number of rows selected! For SELECT
    statements this function will return the number of rows, that were fetched
    to the buffer with oci_fetch*() functions.

    Note:

    In PHP versions before 5.0.0 you must use |ocirowcount| instead. This name
    still can be used, it was left as alias of oci_num_rows() for downwards
    compatability. This, however, is deprecated and not recommended.


vim:ft=help:
cubrid_num_rows

(PECL CUBRID >= 8.3.0)

cubrid_num_rows â€” Get the number of rows in the result set

==============================================================================
*Description*

    int cubrid_num_rows ( resource $result )~

The cubrid_num_rows() function is used to get the number of rows from the
query result. You can use it only when the query executed is a select
statement. When you want to know such value for INSERT, UPDATE, or DELETE
query, you have to use the |cubrid_affected_rows| function.

Note: The cubrid_num_rows() function can only be used for synchronous query;
it returns 0 when it is used for asynchronous query.

==============================================================================
*Parameters*

{result}

    {result} comes from a call to |cubrid_execute|, |cubrid_query| and 
    |cubrid_prepare|

==============================================================================
*Return* *Values*

Number of rows, when process is successful.

0 when the query was done in async mode.

-1, if SQL statement is not SELECT.

FALSE when process is unsuccessful.

==============================================================================
*Examples*

Example #1 cubrid_num_rows() example

<?php >
    $conn = cubrid_connect("localhost", 33000, "demodb", "dba");

    $req = cubrid_execute($conn, "SELECT * FROM code");

    $row_num = cubrid_num_rows($req);
    $col_num = cubrid_num_cols($req);

    printf("Row Num: %d\nColumn Num: %d\n", $row_num, $col_num);

    cubrid_disconnect($conn);
<?>

The above example will output:

Row Num: 6
Column Num: 2

==============================================================================
*See* *Also*

  * |cubrid_execute| - Execute a prepared SQL statement
  * |cubrid_num_cols| - Return the number of columns in the result set
  * |cubrid_affected_rows| - Return the number of rows affected by the last
    SQL statement


vim:ft=help:
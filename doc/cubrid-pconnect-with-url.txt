cubrid_pconnect_with_url

(PECL CUBRID >= 8.3.1)

cubrid_pconnect_with_url â€” Open a persistent connection to CUBRID server

==============================================================================
*Description*

    resource cubrid_pconnect_with_url ( string $conn_url [, string $userid [,~
    string $passwd ]] )~

Establishes a persistent connection to a CUBRID server.

cubrid_pconnect_with_url() acts very much like |cubrid_connect_with_url| with
two major differences.

First, when connecting, the function would first try to find a (persistent)
link that's already open with the same host, port, dbname and userid. If one
is found, an identifier for it will be returned instead of opening a new
connection.

Second, the connection to the SQL server will not be closed when the execution
of the script ends. Instead, the link will remain open for future use (
|cubrid_close| or |cubrid_disconnect| will not close links established by 
cubrid_pconnect_with_url()).

This type of link is therefore called 'persistent'.

<url> ::= CUBRID:<host>:<db_name>:<db_user>:<db_password>:[?<properties>]

<properties> ::= <property> [&<property>]

<properties> ::= alhosts=<alternative_hosts>[ &rctime=<time>]

<properties> ::= login_timeout=<milli_sec>

<properties> ::= query_timeout=<milli_sec>

<properties> ::= disconnect_on_query_timeout=true|false

<alternative_hosts> ::= <standby_broker1_host>:<port> [,
<standby_broker2_host>:<port>]

<host> := HOSTNAME | IP_ADDR

<time> := SECOND

<milli_sec> := MILLI SECOND

  * host : A host name or IP address of the master database
  * db_name : A name of the database
  * db_user : A name of the database user
  * db_password : A database user password
  * alhosts : Specifies the broker information of the standby server, which is
    used for failover when it is impossible to connect to the active server.
    You can specify multiple brokers for failover, and the connection to the
    brokers is attempted in the order listed in alhosts
  * rctime : An interval between the attempts to connect to the active broker
    in which failure occurred. After a failure occurs, the system connects to
    the broker specified by althosts (failover), terminates the transaction,
    and then attempts to connect to the active broker of the master database
    at every rctime. The default value is 600 seconds.
  * login_timeout : Timeout value (unit: msec.) for database login. The
    default value is 0, which means infinite postponement.
  * query_timeout : Timeout value (unit: msec.) for query request. Upon
    timeout, a message to cancel requesting a query transferred to server is
    sent. The return value can depend on the disconnect_on_query_timeout
    configuration; even though the message to cancel a request is sent to
    server, that request may succeed.
  * disconnect_on_query_timeout : Configures a value whether to immediately
    return an error of function being executed upon timeout. The default value
    is false.

    Note:

    ? and : that are used as identifiers in PHP connection URL can't be
    included in the password. The following is an example of a password that
    is invalid to use as connection URL because it contains "?:".

    $url = "CUBRID:localhost:33000:tdb:dba:12?:?login_timeout=100";

    Passwords that contain ? or : may be passed as a separate parameter.

    $url = "CUBRID:localhost:33000:tbd:::?login_timeout=100";

    $conn = cubrid_pconnect_with_url ($url, "dba", "12?");

    If user or password is empty,you can't delete ":",the following is an
    example.

    $url = "CUBRID:localhost:33000:demodb:::";

==============================================================================
*Parameters*

{conn_url}

    A character string that contains server connection information.

{userid}

    User name for the database.

{passwd}

    User password.

==============================================================================
*Return* *Values*

Connection identifier, when process is successful.

FALSE, when process is unsuccessful.

==============================================================================
*Examples*

Example #1 cubrid_pconnect_with_url() url without properties example

<?php >
    $conn_url = "CUBRID:127.0.0.1:33000:demodb:dba::"
    $con = cubrid_pconnect_with_url ($conn_url);

    if ($con) {
       echo "connected successfully";
       cubrid_execute($con, "create table person(id int,name char(16))");
       $req =cubrid_execute($con, "insert into person values(1,'James')");

       if ($req) {
          cubrid_close_request ($req);
          cubrid_commit ($con);
       } else {
          cubrid_rollback ($con);
       }
       cubrid_disconnect ($con);
    }
<?>

Example #2 cubrid_pconnect_with_url() url with properties example

<?php >
    $conn_url = "CUBRID:127.0.0.1:33000:demodb:dba::?althost=10.34.63.132:33088&
    rctime=100"
    $con = cubrid_pconnect_with_url ($conn_url);

    if ($con) {
       echo "connected successfully";
       $req =cubrid_execute($con, "insert into person values(1,'James')");

       if ($req) {
          cubrid_close_request ($req);
          cubrid_commit ($con);
       } else {
          cubrid_rollback ($con);
       }
       cubrid_disconnect ($con);
    }
<?>

==============================================================================
*See* *Also*

  * |cubrid_connect| - Open a connection to a CUBRID Server
  * |cubrid_pconnect| - Open a persistent connection to a CUBRID server
  * cubrid_pconnect_with_url()
  * |cubrid_disconnect| - Close a database connection
  * |cubrid_close| - Close CUBRID connection


vim:ft=help:
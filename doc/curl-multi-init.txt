curl_multi_init

(PHP 5)

curl_multi_init â€” Returns a new cURL multi handle

==============================================================================
*Description*

    resource curl_multi_init ( void )~

Allows the processing of multiple cURL handles in parallel.

==============================================================================
*Parameters*

This function has no parameters.

==============================================================================
*Return* *Values*

Returns a cURL multi handle resource on success, FALSE on failure.

==============================================================================
*Examples*

Example #1 curl_multi_init() example

This example will create two cURL handles, add them to a multi handle, and
then run them in parallel.

<?php >
    // create both cURL resources
    $ch1 = curl_init();
    $ch2 = curl_init();

    // set URL and other appropriate options
    curl_setopt($ch1, CURLOPT_URL, "http://lxr.php.net/");
    curl_setopt($ch1, CURLOPT_HEADER, 0);
    curl_setopt($ch2, CURLOPT_URL, "http://www.php.net/");
    curl_setopt($ch2, CURLOPT_HEADER, 0);

    //create the multiple cURL handle
    $mh = curl_multi_init();

    //add the two handles
    curl_multi_add_handle($mh,$ch1);
    curl_multi_add_handle($mh,$ch2);

    $active = null;
    //execute the handles
    do {
        $mrc = curl_multi_exec($mh, $active);
    } while ($mrc == CURLM_CALL_MULTI_PERFORM);

    while ($active && $mrc == CURLM_OK) {
        if (curl_multi_select($mh) != -1) {
            do {
                $mrc = curl_multi_exec($mh, $active);
            } while ($mrc == CURLM_CALL_MULTI_PERFORM);
        }
    }

    //close the handles
    curl_multi_remove_handle($mh, $ch1);
    curl_multi_remove_handle($mh, $ch2);
    curl_multi_close($mh);

<?>

==============================================================================
*See* *Also*

  * |curl_init| - Initialize a cURL session
  * |curl_multi_close| - Close a set of cURL handles


vim:ft=help:
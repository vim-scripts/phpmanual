variant_mul

(PHP 5)

variant_mul â€” Multiplies the values of the two variants

==============================================================================
*Description*

    mixed variant_mul ( mixed $left , mixed $right )~

Multiplies {left} by {right}.

==============================================================================
*Parameters*

{left}

    The left operand.

{right}

    The right operand.

Boolean values are converted to -1 for FALSE and 0 for TRUE.


    Note:

    As with all the variant arithmetic functions, the parameters for this
    function can be either a PHP native type (integer, string, floating point,
    boolean or NULL), or an instance of a COM, VARIANT or DOTNET class. PHP
    native types will be converted to variants using the same rules as found
    in the constructor for the VARIANT class. COM and DOTNET objects will have
    the value of their default property taken and used as the variant value.

    The variant arithmetic functions are wrappers around the similarly named
    functions in the COM library; for more information on these functions,
    consult the MSDN library. The PHP functions are named slightly
    differently; for example |variant_add| in PHP corresponds to VarAdd() in
    the MSDN documentation.

==============================================================================
*Return* *Values*

                         Variant Multiplication Rules
                           If                                    Then
Both expressions are of the string, date, character,     Multiplication
boolean type
One expression is a string type and the other a          Multiplication
character
One expression is numeric and the other is a string      Multiplication
Both expressions are numeric                             Multiplication
Either expression is NULL                                NULL is returned
Both expressions are empty                               Empty string is
                                                         returned

==============================================================================
*See* *Also*

  * |variant_div| - Returns the result from dividing two variants
  * |variant_idiv| - Converts variants to integers and then returns the result
    from dividing them


vim:ft=help:
sqlite_fetch_single

SQLiteResult::fetchSingle

SQLiteUnbuffered::fetchSingle

(PHP 5 < 5.4.0, PECL sqlite >= 1.0.1)

sqlite_fetch_single -- SQLiteResult::fetchSingle -- 
SQLiteUnbuffered::fetchSingle â€” Fetches the first column of a result set as a
string

==============================================================================
*Description*

    string sqlite_fetch_single ( resource $result [, bool $decode_binary =~
    true ] )~

Object oriented style (method):

    string SQLiteResult::fetchSingle ([ bool $decode_binary = true ] )~
    string SQLiteUnbuffered::fetchSingle ([ bool $decode_binary = true ] )~

sqlite_fetch_single() is identical to |sqlite_fetch_array| except that it
returns the value of the first column of the rowset.

This is the most optimal way to retrieve data when you are only interested in
the values from a single column of data.

==============================================================================
*Parameters*

{result}

    The SQLite result resource. This parameter is not required when using the
    object-oriented method.

{decode_binary}

    When the {decode_binary} parameter is set to TRUE (the default), PHP will
    decode the binary encoding it applied to the data if it was encoded using
    the |sqlite_escape_string|. You should normally leave this value at its
    default, unless you are interoperating with databases created by other
    sqlite capable applications.

==============================================================================
*Return* *Values*

Returns the first column value, as a string.

==============================================================================
*Examples*

Example #1 A sqlite_fetch_single() example

<?php >
    if ($dbhandle = sqlite_open('mysqlitedb', 0666, $sqliteerror)) {

        $sql = "SELECT id FROM sometable WHERE id = 42";
        $res = sqlite_query($dbhandle, $sql);

        if (sqlite_num_rows($res) > 0) {
            echo sqlite_fetch_single($res); // 42
        }
        
        sqlite_close($dbhandle);
    }
<?>

==============================================================================
*See* *Also*

  * |sqlite_fetch_array| - Fetches the next row from a result set as an array


vim:ft=help:
is_file

(PHP 4, PHP 5)

is_file â€” Tells whether the filename is a regular file

==============================================================================
*Description*

    bool is_file ( string $filename )~

Tells whether the given file is a regular file.

==============================================================================
*Parameters*

{filename}

    Path to the file.

==============================================================================
*Return* *Values*

Returns TRUE if the filename exists and is a regular file, FALSE otherwise.

    Note: Because PHP's integer type is signed and many platforms use 32bit
    integers, some filesystem functions may return unexpected results for
    files which are larger than 2GB.

==============================================================================
*Examples*

Example #1 is_file() example

<?php >
    var_dump(is_file('a_file.txt')) . "\n";
    var_dump(is_file('/usr/bin/')) . "\n";
<?>

The above example will output:

bool(true)
bool(false)

==============================================================================
*Errors/Exceptions*

Upon failure, an E_WARNING is emitted.

==============================================================================
*Notes*

    Note: The results of this function are cached. See |clearstatcache| for
    more details.

Tip

As of PHP 5.0.0, this function can also be used with some URL wrappers. Refer
to Supported Protocols and Wrappers to determine which wrappers support |stat|
family of functionality.

==============================================================================
*See* *Also*

  * |is_dir| - Tells whether the filename is a directory
  * |is_link| - Tells whether the filename is a symbolic link


vim:ft=help:
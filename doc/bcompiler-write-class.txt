bcompiler_write_class

(PECL bcompiler >= 0.4)

bcompiler_write_class â€” Writes a defined class as bytecodes

==============================================================================
*Description*

    bool bcompiler_write_class ( resource $filehandle , string $className [,~
    string $extends ] )~

Reads the bytecodes from PHP for an existing class, and writes them to the
open file handle.

==============================================================================
*Parameters*

{filehandle}

    A file handle as returned by |fopen|.

{className}

    The class name, as a string.

{extends}

==============================================================================
*Return* *Values*

Returns TRUE on success or FALSE on failure.

==============================================================================
*Examples*

Example #1 bcompiler_write_class() example

<?php >
    $fh = fopen("/tmp/example","w");
    bcompiler_write_header($fh);
    bcompiler_write_class($fh,"DB");
    // you must write DB_common before DB_mysql, as DB_mysql extends DB_common.
    bcompiler_write_class($fh,"DB_common");
    bcompiler_write_class($fh,"DB_mysql");
    bcompiler_write_footer($fh);
    fclose($fh);

<?>

==============================================================================
*Notes*

Warning

This function is EXPERIMENTAL. The behaviour of this function, its name, and
surrounding documentation may change without notice in a future release of
PHP. This function should be used at your own risk.

    Note:

    This function does not perform dependency checking, so make sure you write
    the classes in an order that will not result in an undefined class error
    occurring when you load it.

==============================================================================
*See* *Also*

  * |bcompiler_write_header| - Writes the bcompiler header
  * |bcompiler_write_footer| - Writes the single character \x00 to indicate
    End of compiled data


vim:ft=help:
uopz_flags

(PECL uopz >= 2.0.2)

uopz_flags â€” Get or set flags on function or class

==============================================================================
*Description*

    int uopz_flags ( string $class , string $function , int $flags )~
    int uopz_flags ( string $function , int $flags )~

Get or set the flags on a class or function entry at runtime

==============================================================================
*Parameters*

{class}

    The name of a class

{function}

    The name of the function

{flags}

    A valid set of ZEND_ACC_ flags, ZEND_ACC_FETCH to read flags

==============================================================================
*Return* *Values*

If setting, returns old flags, else returns flags

==============================================================================
*Examples*

Example #1 uopz_flags() example

<?php >
    class Test {
        public function method() {
            return __CLASS__;
        }
    }

    $flags = uopz_flags("Test", "method", ZEND_ACC_FETCH);

    var_dump((bool) (uopz_flags("Test", "method", ZEND_ACC_FETCH) & 
    ZEND_ACC_PRIVATE));
    var_dump((bool) (uopz_flags("Test", "method", ZEND_ACC_FETCH) & 
    ZEND_ACC_STATIC));

    var_dump(uopz_flags("Test", "method", $flags|ZEND_ACC_STATIC|ZEND_ACC_PRIVATE
    ));

    var_dump((bool) (uopz_flags("Test", "method", ZEND_ACC_FETCH) & 
    ZEND_ACC_PRIVATE));
    var_dump((bool) (uopz_flags("Test", "method", ZEND_ACC_FETCH) & 
    ZEND_ACC_STATIC));
<?>

The above example will output something similar to:

bool(false)
bool(false)
int(1234567890)
bool(true)
bool(true)


vim:ft=help:
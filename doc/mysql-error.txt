mysql_error

(PHP 4, PHP 5)

mysql_error — Returns the text of the error message from previous MySQL
operation

Warning

This extension is deprecated as of PHP 5.5.0, and will be removed in the
future. Instead, the MySQLi or PDO_MySQL extension should be used. See also
MySQL: choosing an API guide and related FAQ for more information.
Alternatives to this function include:

  * mysqli_error()
  * PDO::errorInfo()

==============================================================================
*Description*

    string mysql_error ([ resource $link_identifier = NULL ] )~

Returns the error text from the last MySQL function. Errors coming back from
the MySQL database backend no longer issue warnings. Instead, use mysql_error
() to retrieve the error text. Note that this function only returns the error
text from the most recently executed MySQL function (not including mysql_error
() and |mysql_errno|), so if you want to use it, make sure you check the value
before calling another MySQL function.

==============================================================================
*Parameters*

{ link_identifier}

    The MySQL connection. If the link identifier is not specified, the last
    link opened by |mysql_connect| is assumed. If no such link is found, it
    will try to create one as if |mysql_connect| was called with no arguments.
    If no connection is found or established, an E_WARNING level error is
    generated.

==============================================================================
*Return* *Values*

Returns the error text from the last MySQL function, or '' (empty string) if
no error occurred.

==============================================================================
*Examples*

Example #1 mysql_error() example

<?php >
    $link = mysql_connect("localhost", "mysql_user", "mysql_password");

    mysql_select_db("nonexistentdb", $link);
    echo mysql_errno($link) . ": " . mysql_error($link). "\n";

    mysql_select_db("kossu", $link);
    mysql_query("SELECT * FROM nonexistenttable", $link);
    echo mysql_errno($link) . ": " . mysql_error($link) . "\n";
<?>

The above example will output something similar to:

1049: Unknown database 'nonexistentdb'
1146: Table 'kossu.nonexistenttable' doesn't exist

==============================================================================
*See* *Also*

  * |mysql_errno| - Returns the numerical value of the error message from
    previous MySQL operation
  * » MySQL error codes


vim:ft=help:
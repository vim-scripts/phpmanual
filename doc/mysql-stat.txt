mysql_stat

(PHP 4 >= 4.3.0, PHP 5)

mysql_stat â€” Get current system status

Warning

This extension is deprecated as of PHP 5.5.0, and will be removed in the
future. Instead, the MySQLi or PDO_MySQL extension should be used. See also
MySQL: choosing an API guide and related FAQ for more information.
Alternatives to this function include:

  * mysqli_stat()
  * PDO::getAttribute(PDO::ATTR_SERVER_INFO)

==============================================================================
*Description*

    string mysql_stat ([ resource $link_identifier = NULL ] )~

mysql_stat() returns the current server status.

==============================================================================
*Parameters*

{ link_identifier}

    The MySQL connection. If the link identifier is not specified, the last
    link opened by |mysql_connect| is assumed. If no such link is found, it
    will try to create one as if |mysql_connect| was called with no arguments.
    If no connection is found or established, an E_WARNING level error is
    generated.

==============================================================================
*Return* *Values*

Returns a string with the status for uptime, threads, queries, open tables,
flush tables and queries per second. For a complete list of other status
variables, you have to use the SHOW STATUS SQL command. If {link_identifier}
is invalid, NULL is returned.

==============================================================================
*Examples*

Example #1 mysql_stat() example

<?php >
    $link   = mysql_connect('localhost', 'mysql_user', 'mysql_password');
    $status = explode('  ', mysql_stat($link));
    print_r($status);
<?>

The above example will output something similar to:

Array
(
    [0] => Uptime: 5380
    [1] => Threads: 2
    [2] => Questions: 1321299
    [3] => Slow queries: 0
    [4] => Opens: 26
    [5] => Flush tables: 1
    [6] => Open tables: 17
    [7] => Queries per second avg: 245.595
)

Example #2 Alternative mysql_stat() example

<?php >
    $link   = mysql_connect('localhost', 'mysql_user', 'mysql_password');
    $result = mysql_query('SHOW STATUS', $link);
    while ($row = mysql_fetch_assoc($result)) {
        echo $row['Variable_name'] . ' = ' . $row['Value'] . "\n";
    }
<?>

The above example will output something similar to:

back_log = 50
basedir = /usr/local/
bdb_cache_size = 8388600
bdb_log_buffer_size = 32768
bdb_home = /var/db/mysql/
bdb_max_lock = 10000
bdb_logdir =
bdb_shared_data = OFF
bdb_tmpdir = /var/tmp/
...

==============================================================================
*See* *Also*

  * |mysql_get_server_info| - Get MySQL server info
  * |mysql_list_processes| - List MySQL processes


vim:ft=help:
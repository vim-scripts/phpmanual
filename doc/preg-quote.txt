preg_quote

(PHP 4, PHP 5)

preg_quote â€” Quote regular expression characters

==============================================================================
*Description*

    string preg_quote ( string $str [, string $delimiter = NULL ] )~

preg_quote() takes {str} and puts a backslash in front of every character that
is part of the regular expression syntax. This is useful if you have a
run-time string that you need to match in some text and the string may contain
special regex characters.

The special regular expression characters are: . \ + * ? [ ^ ] $ ( ) { } = ! <
> | : -

==============================================================================
*Parameters*

{str}

    The input string.

{delimiter}

    If the optional {delimiter} is specified, it will also be escaped. This is
    useful for escaping the delimiter that is required by the PCRE functions.
    The / is the most commonly used delimiter.

==============================================================================
*Return* *Values*

Returns the quoted (escaped) string.

==============================================================================
*Changelog*

Version          Description
5.3.0   The - character is now quoted

==============================================================================
*Examples*

Example #1 preg_quote() example

<?php >
    $keywords = '$40 for a g3/400';
    $keywords = preg_quote($keywords, '/');
    echo $keywords; // returns \$40 for a g3\/400
<?>

Example #2 Italicizing a word within some text

<?php >
    // In this example, preg_quote($word) is used to keep the
    // asterisks from having special meaning to the regular
    // expression.

    $textbody = "This book is *very* difficult to find.";
    $word = "*very*";
    $textbody = preg_replace ("/" . preg_quote($word) . "/",
                              "<i>" . $word . "</i>",
                              $textbody);
<?>

==============================================================================
*Notes*

    Note: This function is binary-safe.

==============================================================================
*See* *Also*

  * PCRE Patterns
  * |escapeshellcmd| - Escape shell metacharacters


vim:ft=help:
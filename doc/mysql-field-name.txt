mysql_field_name

(PHP 4, PHP 5)

mysql_field_name â€” Get the name of the specified field in a result

Warning

This extension is deprecated as of PHP 5.5.0, and will be removed in the
future. Instead, the MySQLi or PDO_MySQL extension should be used. See also
MySQL: choosing an API guide and related FAQ for more information.
Alternatives to this function include:

  * mysqli_fetch_field_direct() [name] or [orgname]
  * PDOStatement::getColumnMeta() [name]

==============================================================================
*Description*

    string mysql_field_name ( resource $result , int $field_offset )~

mysql_field_name() returns the name of the specified field index.

==============================================================================
*Parameters*

{ result}

    The result resource that is being evaluated. This result comes from a call
    to |mysql_query|.

{ field_offset}

    The numerical field offset. The {field_offset} starts at 0. If
    {field_offset} does not exist, an error of level E_WARNING is also issued.

==============================================================================
*Return* *Values*

The name of the specified field index on success or FALSE on failure.

==============================================================================
*Examples*

Example #1 mysql_field_name() example

<?php >
    /* The users table consists of three fields:
     *   user_id
     *   username
     *   password.
     */
    $link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
    if (!$link) {
        die('Could not connect to MySQL server: ' . mysql_error());
    }
    $dbname = 'mydb';
    $db_selected = mysql_select_db($dbname, $link);
    if (!$db_selected) {
        die("Could not set $dbname: " . mysql_error());
    }
    $res = mysql_query('select * from users', $link);

    echo mysql_field_name($res, 0) . "\n";
    echo mysql_field_name($res, 2);
<?>

The above example will output:

user_id
password

==============================================================================
*Notes*

    Note: Field names returned by this function are case-sensitive.

    Note:

    For backward compatibility, the following deprecated alias may be used: 
    mysql_fieldname()

==============================================================================
*See* *Also*

  * |mysql_field_type| - Get the type of the specified field in a result
  * |mysql_field_len| - Returns the length of the specified field


vim:ft=help:
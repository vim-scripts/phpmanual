sqlite_udf_encode_binary

(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)

sqlite_udf_encode_binary â€” Encode binary data before returning it from an UDF

==============================================================================
*Description*

    string sqlite_udf_encode_binary ( string $data )~

sqlite_udf_encode_binary() applies a binary encoding to the {data} so that it
can be safely returned from queries (since the underlying libsqlite API is not
binary safe).

If there is a chance that your data might be binary unsafe (e.g.: it contains
a NUL byte in the middle rather than at the end, or if it has and 0x01 byte as
the first character) then you must call this function to encode the return
value from your UDF.

PHP does not perform this encode/decode operation automatically as it would
severely impact performance if it did.

    Note:

    Do not use |sqlite_escape_string| to quote strings returned from UDF's as
    it will lead to double-quoting of the data. Use sqlite_udf_encode_binary()
    instead!

==============================================================================
*Parameters*

{data}

    The string being encoded.

==============================================================================
*Return* *Values*

The encoded string.

==============================================================================
*See* *Also*

  * |sqlite_udf_decode_binary| - Decode binary data passed as parameters to an
    UDF
  * |sqlite_escape_string| - Escapes a string for use as a query parameter
  * |sqlite_create_function| - Registers a "regular" User Defined Function for
    use in SQL statements
  * |sqlite_create_aggregate| - Register an aggregating UDF for use in SQL
    statements


vim:ft=help:
cubrid_put

(PECL CUBRID >= 8.3.0)

cubrid_put â€” Update a column using OID

==============================================================================
*Description*

    int cubrid_put ( resource $conn_identifier , string $oid [, string $attr~
    ], mixed $value )~

The cubrid_put() function is used to update an attribute of the instance of
the given {oid}.

You can update single attribute by using string data type to set {attr}. In
such case, you can use integer, floating point or string type data for the
{value} argument. To update multiple number of attributes, you can disregard
the {attr} argument, and set {value} argument with associative array data
type.

==============================================================================
*Parameters*

{conn_identifier}

    Connection identifier.

{oid}

    OID of the instance that you want to update.

{attr}

    Name of the attribute that you want to update.

{value}

    New value that you want to assign to the attribute.

==============================================================================
*Return* *Values*

TRUE, when process is successful.

FALSE, when process is unsuccessful.

==============================================================================
*Examples*

Example #1 cubrid_put() example

<?php >
    $conn = cubrid_connect("localhost", 33000, "demodb", "dba");

    @cubrid_execute($conn, "DROP TABLE foo");
    cubrid_execute($conn, "CREATE TABLE foo(a int AUTO_INCREMENT, b set
    (int), c list(int), d char(10))");
    cubrid_execute($conn, "INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, 
    {11,22,33,333}, 'a')");
    cubrid_execute($conn, "INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, 
    {44,55,66,666}, 'b')");

    $req = cubrid_execute($conn, "SELECT * FROM foo", CUBRID_INCLUDE_OID);

    cubrid_move_cursor($req, 1, CUBRID_CURSOR_FIRST);
    $oid = cubrid_current_oid($req);

    $attr = cubrid_col_get($conn, $oid, "b");
    var_dump($attr);

    cubrid_put($conn, $oid, "b", array(2, 4, 8));

    $attr = cubrid_col_get($conn, $oid, "b");
    var_dump($attr);

    cubrid_close_request($req);
    cubrid_disconnect($conn);
<?>

The above example will output:

array(3) {
  [0]=>
  string(1) "1"
  [1]=>
  string(1) "2"
  [2]=>
  string(1) "3"
}
array(3) {
  [0]=>
  string(1) "2"
  [1]=>
  string(1) "4"
  [2]=>
  string(1) "8"
}

==============================================================================
*See* *Also*

  * |cubrid_get| - Get a column using OID
  * |cubrid_set_add| - Insert a single element to set type column using OID
  * |cubrid_set_drop| - Delete an element from set type column using OID
  * |cubrid_seq_insert| - Insert an element to a sequence type column using
    OID
  * |cubrid_seq_drop| - Delete an element from sequence type column using OID
  * |cubrid_seq_put| - Update the element value of sequence type column using
    OID


vim:ft=help:
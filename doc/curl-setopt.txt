curl_setopt

(PHP 4 >= 4.0.2, PHP 5)

curl_setopt â€” Set an option for a cURL transfer

==============================================================================
*Description*

    bool curl_setopt ( resource $ch , int $option , mixed $value )~

Sets an option on the given cURL session handle.

==============================================================================
*Parameters*

{ch}

    A cURL handle returned by |curl_init|.

{option}

    The CURLOPT_XXX option to set.

{value}

    The value to be set on {option}.

    {value} should be a bool for the following values of the {option}
    parameter:

                Option                   Set {value} to              Notes
                                    TRUE to automatically
                                    set the Referer: field
    CURLOPT_AUTOREFERER             in requests where it
                                    follows a Location:
                                    redirect.
                                                             From PHP 5.1.3, this
                                    TRUE to return the raw   option has no effect:
                                    output when              the raw output will
    CURLOPT_BINARYTRANSFER          CURLOPT_RETURNTRANSFER   always be returned
                                    is used.                 when
                                                             CURLOPT_RETURNTRANSFER
                                                             is used.
                                    TRUE to mark this as a
                                    new cookie "session". It
                                    will force libcurl to
                                    ignore all cookies it is
                                    about to load that are
                                    "session cookies" from
                                    the previous session. By
                                    default, libcurl always
    CURLOPT_COOKIESESSION           stores and loads all
                                    cookies, independent if
                                    they are session cookies
                                    or not. Session cookies
                                    are cookies without
                                    expiry date and they are
                                    meant to be alive and
                                    existing for this
                                    "session" only.
                                    TRUE to output SSL       Added in cURL 7.19.1.
                                    certification            Available since PHP
    CURLOPT_CERTINFO                information to STDERR on 5.3.2. Requires
                                    secure transfers.        CURLOPT_VERBOSE to be
                                                             on to have an effect.
                                    TRUE tells the library
                                    to perform all the
                                    required proxy           Added in 7.15.2.
    CURLOPT_CONNECT_ONLY            authentication and       Available since PHP
                                    connection setup, but no 5.5.0.
                                    data transfer. This
                                    option is implemented
                                    for HTTP, SMTP and POP3.
                                    TRUE to convert Unix
    CURLOPT_CRLF                    newlines to CRLF
                                    newlines on transfers.
                                    TRUE to use a global DNS
    CURLOPT_DNS_USE_GLOBAL_CACHE    cache. This option is
                                    not thread-safe and is
                                    enabled by default.
                                    TRUE to fail verbosely
                                    if the HTTP code
                                    returned is greater than
    CURLOPT_FAILONERROR             or equal to 400. The
                                    default behavior is to
                                    return the page
                                    normally, ignoring the
                                    code.
                                    TRUE to attempt to
                                    retrieve the
                                    modification date of the
                                    remote document. This
    CURLOPT_FILETIME                value can be retrieved
                                    using the
                                    {CURLINFO_FILETIME}
                                    option with 
                                    |curl_getinfo|.
                                    TRUE to follow any
                                    "Location: " header that
                                    the server sends as part
                                    of the HTTP header (note
    CURLOPT_FOLLOWLOCATION          this is recursive, PHP
                                    will follow as many
                                    "Location: " headers
                                    that it is sent, unless
                                    CURLOPT_MAXREDIRS is
                                    set).
                                    TRUE to force the
                                    connection to explicitly
    CURLOPT_FORBID_REUSE            close when it has
                                    finished processing, and
                                    not be pooled for reuse.
                                    TRUE to force the use of
    CURLOPT_FRESH_CONNECT           a new connection instead
                                    of a cached one.
                                    TRUE to use EPRT (and
                                    LPRT) when doing active
    CURLOPT_FTP_USE_EPRT            FTP downloads. Use FALSE
                                    to disable EPRT and LPRT
                                    and use PORT only.
                                    TRUE to first try an
                                    EPSV command for FTP
    CURLOPT_FTP_USE_EPSV            transfers before
                                    reverting back to PASV.
                                    Set to FALSE to disable
                                    EPSV.
                                    TRUE to create missing
                                    directories when an FTP
    CURLOPT_FTP_CREATE_MISSING_DIRS operation encounters a
                                    path that currently
                                    doesn't exist.
                                    TRUE to append to the
    CURLOPT_FTPAPPEND               remote file instead of
                                    overwriting it.
                                    Pass a long specifying
                                    whether the TCP_NODELAY  Available since PHP
    CURLOPT_TCP_NODELAY             option is to be set or   5.2.1 for versions
                                    cleared (1 = set, 0 =    compiled with libcurl
                                    clear). The option is    7.11.2 or greater.
                                    cleared by default.
                                    An alias of
    CURLOPT_FTPASCII                CURLOPT_TRANSFERTEXT.
                                    Use that instead.
                                    TRUE to only list the
    CURLOPT_FTPLISTONLY             names of an FTP
                                    directory.
    CURLOPT_HEADER                  TRUE to include the
                                    header in the output.
                                    TRUE to track the        Available since PHP
    CURLINFO_HEADER_OUT             handle's request string. 5.1.3. The CURLINFO_
                                                             prefix is intentional.
                                    TRUE to reset the HTTP
                                    request method to GET.
    CURLOPT_HTTPGET                 Since GET is the
                                    default, this is only
                                    necessary if the request
                                    method has been changed.
    CURLOPT_HTTPPROXYTUNNEL         TRUE to tunnel through a
                                    given HTTP proxy.
                                    TRUE to be completely    Removed in cURL 7.15.5
    CURLOPT_MUTE                    silent with regards to   (You can use
                                    the cURL functions.      CURLOPT_RETURNTRANSFER
                                                             instead)
                                    TRUE to scan the ~
                                    /.netrc file to find a
    CURLOPT_NETRC                   username and password
                                    for the remote site that
                                    a connection is being
                                    established with.
                                    TRUE to exclude the body
                                    from the output. Request
    CURLOPT_NOBODY                  method is then set to
                                    HEAD. Changing this to
                                    FALSE does not change it
                                    to GET.
                                    TRUE to disable the
                                    progress meter for cURL
                                    transfers.


                                        Note:
    CURLOPT_NOPROGRESS
                                        PHP automatically
                                        sets this option to
                                        TRUE, this should
                                        only be changed for
                                        debugging purposes.

                                    TRUE to ignore any cURL
                                    function that causes a
                                    signal to be sent to the
    CURLOPT_NOSIGNAL                PHP process. This is     Added in cURL 7.10.
                                    turned on by default in
                                    multi-threaded SAPIs so
                                    timeout options can
                                    still be used.
                                    TRUE to do a regular
                                    HTTP POST. This POST is
    CURLOPT_POST                    the normal application/
                                    x-www-form-urlencoded
                                    kind, most commonly used
                                    by HTML forms.
                                    TRUE to HTTP PUT a file.
    CURLOPT_PUT                     The file to PUT must be
                                    set with CURLOPT_INFILE
                                    and CURLOPT_INFILESIZE.
                                    TRUE to return the
                                    transfer as a string of
    CURLOPT_RETURNTRANSFER          the return value of 
                                    |curl_exec| instead of
                                    outputting it out
                                    directly.
                                    TRUE to disable support
                                    for the @ prefix for
                                    uploading files in       Added in PHP 5.5.0
                                    CURLOPT_POSTFIELDS,      with FALSE as the
    CURLOPT_SAFE_UPLOAD             which means that values  default value. PHP
                                    starting with @ can be   5.6.0 changes the
                                    safely passed as fields. default value to TRUE.
                                    CURLFile may be used for
                                    uploads instead.
                                    FALSE to stop cURL from
                                    verifying the peer's
                                    certificate. Alternate
                                    certificates to verify   TRUE by default as of
    CURLOPT_SSL_VERIFYPEER          against can be specified cURL 7.10. Default
                                    with the CURLOPT_CAINFO  bundle installed as of
                                    option or a certificate  cURL 7.10.
                                    directory can be
                                    specified with the
                                    CURLOPT_CAPATH option.
                                    TRUE to use ASCII mode
                                    for FTP transfers. For
                                    LDAP, it retrieves data
    CURLOPT_TRANSFERTEXT            in plain text instead of
                                    HTML. On Windows
                                    systems, it will not set
                                    STDOUT to binary mode.
                                    TRUE to keep sending the
                                    username and password
                                    when following locations
    CURLOPT_UNRESTRICTED_AUTH       (using
                                    CURLOPT_FOLLOWLOCATION),
                                    even when the hostname
                                    has changed.
    CURLOPT_UPLOAD                  TRUE to prepare for an
                                    upload.
                                    TRUE to output verbose
                                    information. Writes
    CURLOPT_VERBOSE                 output to STDERR, or the
                                    file specified using
                                    CURLOPT_STDERR.

    {value} should be an integer for the following values of the {option}
    parameter:

               Option                      Set {value} to              Notes
                                 The size of the buffer to use for   Added in
    CURLOPT_BUFFERSIZE           each read. There is no guarantee    cURL
                                 this request will be fulfilled,     7.10.
                                 however.
                                 One of the CURLCLOSEPOLICY_*
                                 values.

                                                                     Removed
    CURLOPT_CLOSEPOLICY              Note:                           in PHP
                                                                     5.6.0.
                                     This option is deprecated, as
                                     it was never implemented in
                                     cURL and never had any effect.

                                 The number of seconds to wait while
    CURLOPT_CONNECTTIMEOUT       trying to connect. Use 0 to wait
                                 indefinitely.
                                 The number of milliseconds to wait
                                 while trying to connect. Use 0 to   Added in
                                 wait indefinitely. If libcurl is    cURL
                                 built to use the standard system    7.16.2.
    CURLOPT_CONNECTTIMEOUT_MS    name resolver, that portion of the  Available
                                 connect will still use full-second  since PHP
                                 resolution for timeouts with a      5.2.3.
                                 minimum timeout allowed of one
                                 second.
                                 The number of seconds to keep DNS
    CURLOPT_DNS_CACHE_TIMEOUT    entries in memory. This option is
                                 set to 120 (2 minutes) by default.
                                 The FTP authentication method (when
                                 is activated): CURLFTPAUTH_SSL (try Added in
    CURLOPT_FTPSSLAUTH           SSL first), CURLFTPAUTH_TLS (try    cURL
                                 TLS first), or CURLFTPAUTH_DEFAULT  7.12.2.
                                 (let cURL decide).
                                 {CURL_HTTP_VERSION_NONE} (default,
                                 lets CURL decide which version to
    CURLOPT_HTTP_VERSION         use), {CURL_HTTP_VERSION_1_0}
                                 (forces HTTP/1.0), or
                                 {CURL_HTTP_VERSION_1_1} (forces
                                 HTTP/1.1).
                                 The HTTP authentication method(s)
                                 to use. The options are:
                                 {CURLAUTH_BASIC},
                                 {CURLAUTH_DIGEST},
                                 {CURLAUTH_GSSNEGOTIATE},
                                 {CURLAUTH_NTLM}, {CURLAUTH_ANY},
                                 and {CURLAUTH_ANYSAFE}.

                                 The bitwise | (or) operator can be
                                 used to combine more than one
                                 method. If this is done, cURL will
    CURLOPT_HTTPAUTH             poll the server to see what methods
                                 it supports and pick the best one.

                                 {CURLAUTH_ANY} is an alias for
                                 CURLAUTH_BASIC | CURLAUTH_DIGEST |
                                 CURLAUTH_GSSNEGOTIATE |
                                 CURLAUTH_NTLM.

                                 {CURLAUTH_ANYSAFE} is an alias for
                                 CURLAUTH_DIGEST |
                                 CURLAUTH_GSSNEGOTIATE |
                                 CURLAUTH_NTLM.

                                 The expected size, in bytes, of the
                                 file when uploading a file to a
                                 remote site. Note that using this
    CURLOPT_INFILESIZE           option will not stop libcurl from
                                 sending more data, as exactly what
                                 is sent depends on
                                 CURLOPT_READFUNCTION.
                                 The transfer speed, in bytes per
                                 second, that the transfer should be
    CURLOPT_LOW_SPEED_LIMIT      below during the count of
                                 CURLOPT_LOW_SPEED_TIME seconds
                                 before PHP considers the transfer
                                 too slow and aborts.
                                 The number of seconds the transfer
                                 speed should be below
    CURLOPT_LOW_SPEED_TIME       CURLOPT_LOW_SPEED_LIMIT before PHP
                                 considers the transfer too slow and
                                 aborts.
                                 The maximum amount of persistent
                                 connections that are allowed. When
    CURLOPT_MAXCONNECTS          the limit is reached,
                                 CURLOPT_CLOSEPOLICY is used to
                                 determine which connection to
                                 close.
                                 The maximum amount of HTTP
    CURLOPT_MAXREDIRS            redirections to follow. Use this
                                 option alongside
                                 CURLOPT_FOLLOWLOCATION.
    CURLOPT_PORT                 An alternative port number to
                                 connect to.
                                 Bitmask of CURLPROTO_* values. If
                                 used, this bitmask limits what
                                 protocols libcurl may use in the
                                 transfer. This allows you to have a
                                 libcurl built to support a wide
                                 range of protocols but still limit
                                 specific transfers to only be
                                 allowed to use a subset of them. By
                                 default libcurl will accept all
                                 protocols it supports. See also
                                 CURLOPT_REDIR_PROTOCOLS.            Added in
    CURLOPT_PROTOCOLS                                                cURL
                                 Valid protocol options are:         7.19.4.
                                 {CURLPROTO_HTTP},
                                 {CURLPROTO_HTTPS}, {CURLPROTO_FTP},
                                 {CURLPROTO_FTPS}, {CURLPROTO_SCP},
                                 {CURLPROTO_SFTP},
                                 {CURLPROTO_TELNET},
                                 {CURLPROTO_LDAP},
                                 {CURLPROTO_LDAPS},
                                 {CURLPROTO_DICT}, {CURLPROTO_FILE},
                                 {CURLPROTO_TFTP}, {CURLPROTO_ALL}

                                 The HTTP authentication method(s)
                                 to use for the proxy connection.
                                 Use the same bitmasks as described  Added in
    CURLOPT_PROXYAUTH            in CURLOPT_HTTPAUTH. For proxy      cURL
                                 authentication, only                7.10.7.
                                 {CURLAUTH_BASIC} and
                                 {CURLAUTH_NTLM} are currently
                                 supported.
                                 The port number of the proxy to
    CURLOPT_PROXYPORT            connect to. This port number can
                                 also be set in CURLOPT_PROXY.
                                 Either {CURLPROXY_HTTP} (default)   Added in
    CURLOPT_PROXYTYPE            or {CURLPROXY_SOCKS5}.              cURL
                                                                     7.10.
                                 Bitmask of CURLPROTO_* values. If
                                 used, this bitmask limits what
                                 protocols libcurl may use in a
                                 transfer that it follows to in a
                                 redirect when
                                 CURLOPT_FOLLOWLOCATION is enabled.
                                 This allows you to limit specific
                                 transfers to only be allowed to use Added in
    CURLOPT_REDIR_PROTOCOLS      a subset of protocols in            cURL
                                 redirections. By default libcurl    7.19.4.
                                 will allow all protocols except for
                                 FILE and SCP. This is a difference
                                 compared to pre-7.19.4 versions
                                 which unconditionally would follow
                                 to all protocols supported. See
                                 also CURLOPT_PROTOCOLS for protocol
                                 constant values.
    CURLOPT_RESUME_FROM          The offset, in bytes, to resume a
                                 transfer from.
                                 1 to check the existence of a
                                 common name in the SSL peer
                                 certificate. 2 to check the         Support
                                 existence of a common name and also for value
    CURLOPT_SSL_VERIFYHOST       verify that it matches the hostname 1 removed
                                 provided. In production             in cURL
                                 environments the value of this      7.28.1
                                 option should be kept at 2 (default
                                 value).
                                 The SSL version (2 or 3) to use. By
    CURLOPT_SSLVERSION           default PHP will try to determine
                                 this itself, although in some cases
                                 this must be set manually.
                                 How CURLOPT_TIMEVALUE is treated.
                                 Use {CURL_TIMECOND_IFMODSINCE} to
                                 return the page only if it has been
                                 modified since the time specified
                                 in CURLOPT_TIMEVALUE. If it hasn't
    CURLOPT_TIMECONDITION        been modified, a "304 Not Modified"
                                 header will be returned assuming
                                 CURLOPT_HEADER is TRUE. Use
                                 {CURL_TIMECOND_IFUNMODSINCE} for
                                 the reverse effect.
                                 {CURL_TIMECOND_IFMODSINCE} is the
                                 default.
    CURLOPT_TIMEOUT              The maximum number of seconds to
                                 allow cURL functions to execute.
                                 The maximum number of milliseconds
                                 to allow cURL functions to execute. Added in
                                 If libcurl is built to use the      cURL
    CURLOPT_TIMEOUT_MS           standard system name resolver, that 7.16.2.
                                 portion of the connect will still   Available
                                 use full-second resolution for      since PHP
                                 timeouts with a minimum timeout     5.2.3.
                                 allowed of one second.
                                 The time in seconds since January
    CURLOPT_TIMEVALUE            1st, 1970. The time will be used by
                                 CURLOPT_TIMECONDITION. By default,
                                 {CURL_TIMECOND_IFMODSINCE} is used.
                                 If a download exceeds this speed    Added in
                                 (counted in bytes per second) on    cURL
                                 cumulative average during the       7.15.5.
    CURLOPT_MAX_RECV_SPEED_LARGE transfer, the transfer will pause   Available
                                 to keep the average rate less than  since PHP
                                 or equal to the parameter value.    5.4.0.
                                 Defaults to unlimited speed.
                                 If an upload exceeds this speed     Added in
                                 (counted in bytes per second) on    cURL
                                 cumulative average during the       7.15.5.
    CURLOPT_MAX_SEND_SPEED_LARGE transfer, the transfer will pause   Available
                                 to keep the average rate less than  since PHP
                                 or equal to the parameter value.    5.4.0.
                                 Defaults to unlimited speed.
                                 A bitmask consisting of one or more
                                 of CURLSSH_AUTH_PUBLICKEY,
                                 CURLSSH_AUTH_PASSWORD,              Added in
    CURLOPT_SSH_AUTH_TYPES       CURLSSH_AUTH_HOST,                  cURL
                                 CURLSSH_AUTH_KEYBOARD. Set to       7.16.1.
                                 CURLSSH_AUTH_ANY to let libcurl
                                 pick one.
                                 Allows an application to select
                                 what kind of IP addresses to use
                                 when resolving host names. This is
                                 only interesting when using host
                                 names that resolve addresses using  Added in
    CURLOPT_IPRESOLVE            more than one version of IP,        cURL
                                 possible values are                 7.10.8.
                                 CURL_IPRESOLVE_WHATEVER,
                                 CURL_IPRESOLVE_V4,
                                 CURL_IPRESOLVE_V6, by default
                                 CURL_IPRESOLVE_WHATEVER.

    {value} should be a string for the following values of the {option}
    parameter:

                Option                       Set {value} to            Notes
                                    The name of a file holding one or
                                    more certificates to verify the   Requires
    CURLOPT_CAINFO                  peer with. This only makes sense  absolute
                                    when used in combination with     path.
                                    CURLOPT_SSL_VERIFYPEER.
                                    A directory that holds multiple
    CURLOPT_CAPATH                  CA certificates. Use this option
                                    alongside CURLOPT_SSL_VERIFYPEER.
                                    The contents of the "Cookie: "
                                    header to be used in the HTTP
    CURLOPT_COOKIE                  request. Note that multiple
                                    cookies are separated with a
                                    semicolon followed by a space
                                    (e.g., "fruit=apple; colour=red")
                                    The name of the file containing
                                    the cookie data. The cookie file
                                    can be in Netscape format, or
    CURLOPT_COOKIEFILE              just plain HTTP-style headers
                                    dumped into a file. If the name
                                    is an empty string, no cookies
                                    are loaded, but cookie handling
                                    is still enabled.
                                    The name of a file to save all
    CURLOPT_COOKIEJAR               internal cookies to when the
                                    handle is closed, e.g. after a
                                    call to curl_close.
                                    A custom request method to use
                                    instead of "GET" or "HEAD" when
                                    doing a HTTP request. This is
                                    useful for doing "DELETE" or
                                    other, more obscure HTTP
                                    requests. Valid values are things
                                    like "GET", "POST", "CONNECT" and
                                    so on; i.e. Do not enter a whole
                                    HTTP request line here. For
    CURLOPT_CUSTOMREQUEST           instance, entering "GET /
                                    index.html HTTP/1.0\r\n\r\n"
                                    would be incorrect.


                                        Note:

                                        Don't do this without making
                                        sure the server supports the
                                        custom request method first.

                                    Like CURLOPT_RANDOM_FILE, except
    CURLOPT_EGDSOCKET               a filename to an Entropy
                                    Gathering Daemon socket.
                                    The contents of the
                                    "Accept-Encoding: " header. This
                                    enables decoding of the response. Added in
    CURLOPT_ENCODING                Supported encodings are           cURL
                                    "identity", "deflate", and "gzip" 7.10.
                                    . If an empty string, "", is set,
                                    a header containing all supported
                                    encoding types is sent.
                                    The value which will be used to
                                    get the IP address to use for the
                                    FTP "PORT" instruction. The
                                    "PORT" instruction tells the
                                    remote server to connect to our
    CURLOPT_FTPPORT                 specified IP address. The string
                                    may be a plain IP address, a
                                    hostname, a network interface
                                    name (under Unix), or just a
                                    plain '-' to use the systems
                                    default IP address.
                                    The name of the outgoing network
    CURLOPT_INTERFACE               interface to use. This can be an
                                    interface name, an IP address or
                                    a host name.
                                    The password required to use the  Added in
    CURLOPT_KEYPASSWD               CURLOPT_SSLKEY or                 cURL
                                    CURLOPT_SSH_PRIVATE_KEYFILE       7.16.1.
                                    private key.
                                    The KRB4 (Kerberos 4) security
                                    level. Any of the following
                                    values (in order from least to
                                    most powerful) are valid: "clear"
                                    , "safe", "confidential",
    CURLOPT_KRB4LEVEL               "private".. If the string does
                                    not match one of these, "private"
                                    is used. Setting this option to
                                    NULL will disable KRB4 security.
                                    Currently KRB4 security only
                                    works with FTP transactions.
                                    The full data to post in a HTTP
                                    "POST" operation. To post a file,
                                    prepend a filename with @ and use
                                    the full path. The filetype can
                                    be explicitly specified by
                                    following the filename with the
                                    type in the format ';type=
                                    mimetype'. This parameter can
                                    either be passed as a urlencoded
                                    string like 'para1=val1&para2=
                                    val2&...' or as an array with the
                                    field name as key and field data
    CURLOPT_POSTFIELDS              as value. If {value} is an array,
                                    the Content-Type header will be
                                    set to multipart/form-data. As of
                                    PHP 5.2.0, {value} must be an
                                    array if files are passed to this
                                    option with the @ prefix. As of
                                    PHP 5.5.0, the @ prefix is
                                    deprecated and files can be sent
                                    using CURLFile. The @ prefix can
                                    be disabled for safe passing of
                                    values beginning with @ by
                                    setting the CURLOPT_SAFE_UPLOAD
                                    option to TRUE.
    CURLOPT_PROXY                   The HTTP proxy to tunnel requests
                                    through.
                                    A username and password formatted
    CURLOPT_PROXYUSERPWD            as "[username]:[password]" to use
                                    for the connection to the proxy.
    CURLOPT_RANDOM_FILE             A filename to be used to seed the
                                    random number generator for SSL.
                                    Range(s) of data to retrieve in
                                    the format "X-Y" where X or Y are
    CURLOPT_RANGE                   optional. HTTP transfers also
                                    support several intervals,
                                    separated with commas in the
                                    format "X-Y,N-M".
                                    The contents of the "Referer: "
    CURLOPT_REFERER                 header to be used in a HTTP
                                    request.
                                    A string containing 32
                                    hexadecimal digits. The string
                                    should be the MD5 checksum of the Added in
    CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 remote host's public key, and     cURL
                                    libcurl will reject the           7.17.1.
                                    connection to the host unless the
                                    md5sums match. This option is
                                    only for SCP and SFTP transfers.
                                    The file name for your public
                                    key. If not used, libcurl
                                    defaults to $HOME/.ssh/id_dsa.pub Added in
    CURLOPT_SSH_PUBLIC_KEYFILE      if the HOME environment variable  cURL
                                    is set, and just "id_dsa.pub" in  7.16.1.
                                    the current directory if HOME is
                                    not set.
                                    The file name for your private
                                    key. If not used, libcurl
                                    defaults to $HOME/.ssh/id_dsa if
                                    the HOME environment variable is  Added in
    CURLOPT_SSH_PRIVATE_KEYFILE     set, and just "id_dsa" in the     cURL
                                    current directory if HOME is not  7.16.1.
                                    set. If the file is
                                    password-protected, set the
                                    password with CURLOPT_KEYPASSWD.
                                    A list of ciphers to use for SSL.
    CURLOPT_SSL_CIPHER_LIST         For example, RC4-SHA and TLSv1
                                    are valid cipher lists.
    CURLOPT_SSLCERT                 The name of a file containing a
                                    PEM formatted certificate.
    CURLOPT_SSLCERTPASSWD           The password required to use the
                                    CURLOPT_SSLCERT certificate.
                                    The format of the certificate.    Added in
    CURLOPT_SSLCERTTYPE             Supported formats are "PEM"       cURL
                                    (default), "DER", and "ENG".      7.9.3.
                                    The identifier for the crypto
    CURLOPT_SSLENGINE               engine of the private SSL key
                                    specified in CURLOPT_SSLKEY.
                                    The identifier for the crypto
    CURLOPT_SSLENGINE_DEFAULT       engine used for asymmetric crypto
                                    operations.
    CURLOPT_SSLKEY                  The name of a file containing a
                                    private SSL key.
                                    The secret password needed to use
                                    the private SSL key specified in
                                    CURLOPT_SSLKEY.


    CURLOPT_SSLKEYPASSWD                Note:

                                        Since this option contains a
                                        sensitive password, remember
                                        to keep the PHP script it is
                                        contained within safe.

                                    The key type of the private SSL
    CURLOPT_SSLKEYTYPE              key specified in CURLOPT_SSLKEY.
                                    Supported key types are "PEM"
                                    (default), "DER", and "ENG".
                                    The URL to fetch. This can also
    CURLOPT_URL                     be set when initializing a
                                    session with |curl_init|.
                                    The contents of the "User-Agent:
    CURLOPT_USERAGENT               " header to be used in a HTTP
                                    request.
                                    A username and password formatted
    CURLOPT_USERPWD                 as "[username]:[password]" to use
                                    for the connection.

    {value} should be an array for the following values of the {option}
    parameter:

            Option                      Set {value} to                 Notes
                           An array of HTTP 200 responses that will  Added in
    CURLOPT_HTTP200ALIASES be treated as valid responses and not as  cURL
                           errors.                                   7.10.3.
                           An array of HTTP header fields to set, in
    CURLOPT_HTTPHEADER     the format array('Content-type: text/
                           plain', 'Content-length: 100')
                           An array of FTP commands to execute on
    CURLOPT_POSTQUOTE      the server after the FTP request has been
                           performed.
    CURLOPT_QUOTE          An array of FTP commands to execute on
                           the server prior to the FTP request.

    {value} should be a stream resource (using |fopen|, for example) for the
    following values of the {option} parameter:

          Option                            Set {value} to
    CURLOPT_FILE        The file that the transfer should be written to. The
                        default is STDOUT (the browser window).
    CURLOPT_INFILE      The file that the transfer should be read from when
                        uploading.
    CURLOPT_STDERR      An alternative location to output errors to instead of
                        STDERR.
    CURLOPT_WRITEHEADER The file that the header part of the transfer is
                        written to.

    {value} should be the name of a valid function or a Closure for the
    following values of the {option} parameter:

             Option                           Set {value} to
                             A callback accepting two parameters. The first is
                             the cURL resource, the second is a string with
    CURLOPT_HEADERFUNCTION   the header data to be written. The header data
                             must be written when by this callback. Return the
                             number of bytes written.
                             A callback accepting three parameters. The first
                             is the cURL resource, the second is a string
    CURLOPT_PASSWDFUNCTION   containing a password prompt, and the third is
                             the maximum password length. Return the string
                             containing the password.
                             A callback accepting five parameters. The first
                             is the cURL resource, the second is the total
                             number of bytes expected to be downloaded in this
                             transfer, the third is the number of bytes
                             downloaded so far, the fourth is the total number
                             of bytes expected to be uploaded in this
                             transfer, and the fifth is the number of bytes
                             uploaded so far.
    CURLOPT_PROGRESSFUNCTION
                                 Note:

                                 The callback is only called when the
                                 CURLOPT_NOPROGRESS option is set to FALSE.

                             Return a non-zero value to abort the transfer. In
                             which case, the transfer will set a
                             CURLE_ABORTED_BY_CALLBACK error.

                             A callback accepting three parameters. The first
                             is the cURL resource, the second is a stream
                             resource provided to cURL through the option
                             CURLOPT_INFILE, and the third is the maximum
    CURLOPT_READFUNCTION     amount of data to be read. The callback must
                             return a string with a length equal or smaller
                             than the amount of data requested, typically by
                             reading it from the passed stream resource. It
                             should return an empty string to signal EOF.
                             A callback accepting two parameters. The first is
                             the cURL resource, and the second is a string
    CURLOPT_WRITEFUNCTION    with the data to be written. The data must be
                             saved by this callback. It must return the exact
                             number of bytes written or the transfer will be
                             aborted with an error.

    Other values:

       Option                            Set {value} to
    CURLOPT_SHARE A result of |curl_share_init|. Makes the cURL handle to use
                  the data from the shared handle.

==============================================================================
*Return* *Values*

Returns TRUE on success or FALSE on failure.

==============================================================================
*Changelog*

Version                              Description
5.6.0   CURL_SAFE_UPLOAD is now TRUE by default.
5.6.0   Removed CURLOPT_CLOSEPOLICY and associated values.
5.5.0   Added the cURL resource as the first argument to the
        CURLOPT_PROGRESSFUNCTION callback.
5.5.0   Introduced CURLOPT_SHARE.
5.3.0   Introduced CURLOPT_PROGRESSFUNCTION.
5.2.10  Introduced CURLOPT_PROTOCOLS, and CURLOPT_REDIR_PROTOCOLS.
5.1.0   Introduced CURLOPT_AUTOREFERER, CURLOPT_BINARYTRANSFER,
        CURLOPT_FTPSSLAUTH, CURLOPT_PROXYAUTH, and CURLOPT_TIMECONDITION.
        Introduced CURLOPT_FTP_USE_EPRT, CURLOPT_NOSIGNAL,
5.0.0   CURLOPT_UNRESTRICTED_AUTH, CURLOPT_BUFFERSIZE, CURLOPT_HTTPAUTH,
        CURLOPT_PROXYPORT, CURLOPT_PROXYTYPE, CURLOPT_SSLCERTTYPE, and
        CURLOPT_HTTP200ALIASES.

==============================================================================
*Examples*

Example #1 Initializing a new cURL session and fetching a web page

<?php >
    // create a new cURL resource
    $ch = curl_init();

    // set URL and other appropriate options
    curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
    curl_setopt($ch, CURLOPT_HEADER, false);

    // grab URL and pass it to the browser
    curl_exec($ch);

    // close cURL resource, and free up system resources
    curl_close($ch);
<?>

Example #2 Uploading file

<?php >

    /* http://localhost/upload.php:
    print_r($_POST);
    print_r($_FILES);
    */

    $ch = curl_init();

    $data = array('name' => 'Foo', 'file' => '@/home/user/test.png');

    curl_setopt($ch, CURLOPT_URL, 'http://localhost/upload.php');
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);

    curl_exec($ch);
<?>

The above example will output:

Array
(
    [name] => Foo
)
Array
(
    [file] => Array
        (
            [name] => test.png
            [type] => image/png
            [tmp_name] => /tmp/phpcpjNeQ
            [error] => 0
            [size] => 279
        )

)


==============================================================================
*Notes*

    Note:

    Passing an array to CURLOPT_POSTFIELDS will encode the data as multipart/
    form-data, while passing a URL-encoded string will encode the data as
    application/x-www-form-urlencoded.

==============================================================================
*See* *Also*

  * |curl_setopt_array| - Set multiple options for a cURL transfer


vim:ft=help:
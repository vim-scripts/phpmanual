func_num_args

(PHP 4, PHP 5)

func_num_args â€” Returns the number of arguments passed to the function

==============================================================================
*Description*

    int func_num_args ( void )~

Gets the number of arguments passed to the function.

This function may be used in conjunction with |func_get_arg| and 
|func_get_args| to allow user-defined functions to accept variable-length
argument lists.

==============================================================================
*Return* *Values*

Returns the number of arguments passed into the current user-defined function.

==============================================================================
*Changelog*

Version                              Description
5.3.0   This function can now be used in parameter lists.
        If this function is called from the outermost scope of a file which
5.3.0   has been included by calling |include| or |require| from within a
        function in the calling file, it now generates a warning and returns
        -1.

==============================================================================
*Errors/Exceptions*

Generates a warning if called from outside of a user-defined function.

==============================================================================
*Examples*

Example #1 func_num_args() example

<?php >
    function foo()
    {
        $numargs = func_num_args();
        echo "Number of arguments: $numargs\n";
    }

    foo(1, 2, 3);   
<?>

The above example will output:

Number of arguments: 3

Example #2 func_num_args() example before and after PHP 5.3

test.php
<?php >
    function foo() {
        include './fna.php';
    }

    foo('First arg', 'Second arg');
<?>

fna.php
<?php >

    $num_args = func_num_args();
    var_export($num_args);

<?>

Output previous to PHP 5.3:

2

Output in PHP 5.3 and later will be something similar to:

Warning: func_num_args():  Called from the global scope - no function
context in /home/torben/Desktop/code/ml/fna.php on line 3
-1

==============================================================================
*Notes*

    Note:

    Because this function depends on the current scope to determine parameter
    details, it cannot be used as a function parameter in versions prior to
    5.3.0. If this value must be passed, the results should be assigned to a
    variable, and that variable should be passed.

==============================================================================
*See* *Also*

  * ... syntax in PHP 5.6+
  * |func_get_arg|
  * |func_get_args|
  * ReflectionFunctionAbstract::getNumberOfParameters()


vim:ft=help:
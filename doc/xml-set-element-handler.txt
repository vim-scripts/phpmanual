xml_set_element_handler

(PHP 4, PHP 5)

xml_set_element_handler â€” Set up start and end element handlers

==============================================================================
*Description*

    bool xml_set_element_handler ( resource $parser , callable~
    $start_element_handler , callable $end_element_handler )~

Sets the element handler functions for the XML {parser}.
{start_element_handler} and {end_element_handler} are strings containing the
names of functions that must exist when |xml_parse| is called for {parser}.

==============================================================================
*Parameters*

{parser}

    A reference to the XML parser to set up start and end element handler
    functions.

{start_element_handler}

    The function named by {start_element_handler} must accept three
    parameters:

    start_element_handler ( resource $parser , string $name , array $attribs~
    )~

    {parser}
        The first parameter, parser, is a reference to the XML parser calling
        the handler.
    {name}
        The second parameter, {name}, contains the name of the element for
        which this handler is called.If case-folding is in effect for this
        parser, the element name will be in uppercase letters.
    {attribs}
        The third parameter, {attribs}, contains an associative array with the
        element's attributes (if any).The keys of this array are the attribute
        names, the values are the attribute values.Attribute names are
        case-folded on the same criteria as element names.Attribute values are
        not case-folded. The original order of the attributes can be retrieved
        by walking through {attribs} the normal way, using |each|.The first
        key in the array was the first attribute, and so on.

        Note: Instead of a function name, an array containing an object
        reference and a method name can also be supplied.

{end_element_handler}

    The function named by {end_element_handler} must accept two parameters:

    end_element_handler ( resource $parser , string $name )~

    {parser}
        The first parameter, parser, is a reference to the XML parser calling
        the handler.
    {name}
        The second parameter, {name}, contains the name of the element for
        which this handler is called.If case-folding is in effect for this
        parser, the element name will be in uppercase letters.

    If a handler function is set to an empty string, or FALSE, the handler in
    question is disabled.

==============================================================================
*Return* *Values*

Returns TRUE on success or FALSE on failure.


vim:ft=help: